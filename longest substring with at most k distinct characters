class Solution {
public:
    int lengthOfLongestSubstringKDistinct(string s, int k) {
        int n = s.size();
        if( k == 0){
            return 0;
        }
        if(n < 2){
            return n;
        }

        unordered_map<char, int> m_map;
        int start = 0;
        int res = 0;
        for(int i = 0; i < n; ++i){
            m_map[s[i]]++;
            while(m_map.size() > k){
                m_map[s[start]]--;
                if(m_map[s[start]] == 0){
                    m_map.erase(s[start]);
                }
                start++;
            }
            res = max(res, i - start + 1);
        }
        return res;
    }
};

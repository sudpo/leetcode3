/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
    ListNode *reverse(ListNode *head){
        ListNode *pre = NULL;
        while(head != NULL){
            ListNode * next = head->next;
            head->next = pre;
            pre = head;
            head = next;
        }
        return pre;
    }
public:
    bool isPalindrome(ListNode* head) {
        if(head == NULL){
            return true;
        }

        ListNode *slow = head;
        ListNode *fast = head;
        ListNode *pre = head;
        while(fast != NULL && fast ->next != NULL){
            pre = slow;
            slow = slow->next;
            fast = fast->next->next;
        }
        pre->next = NULL;

        ListNode *newHead = reverse(slow);
        while(head != NULL && newHead != NULL){
            if(head -> val != newHead->val){
                return false;
            }
            head = head->next;
            newHead = newHead->next;
        }
        return true;

    }
};

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int> > res;
        int n = nums.size();
        if(n < 3){
            return res;
        }

        sort(nums.begin(), nums.end());
        for(int i = 0; i <= n-3; ++i){
            int start = i+1;
            int end = n-1;
            int target = -nums[i];
            while(start < end){
                if(nums[start] + nums[end] == target){
                    vector<int> solution(3,0);
                    solution[0] = nums[i];
                    solution[1] = nums[start];
                    solution[2] = nums[end];
                    start++;
                    end--;
                    while(start < end && nums[start] == solution[1]){
                        start++;
                    }
                    while(start < end && nums[end] == solution[2]){
                        end--;
                    }
                    res.push_back(solution);
                }else if(nums[start] + nums[end] < target){
                    start++;
                }else{
                    end--;
                }
            }
            while(i+1 <= n -3 && nums[i+1] == nums[i]){
                i++;
            }
        }
        return res;
    }
};

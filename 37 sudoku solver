class Solution {
    bool solveSudoku(vector<vector<char>> &board, int row, int col){
        if(col >= 9){
            return solveSudoku(board, row+1, 0);
        }
        if(row == 9){
            return true;
        }

        if(board[row][col] == '.'){
            for(int i = 1; i <= 9; ++i){
                board[row][col] = char(i +'0');
                if(isValid(board, row, col)){
                    if(solveSudoku(board, row, col+1)){
                        return true;
                    }
                }
                board[row][col] = '.';
            }
        }
        else{
            return solveSudoku(board, row, col+1);
        }
        return false;
    }

    bool isValid(vector<vector<char> > &board, int row, int col) {
        for(int i = 0; i < 9; ++i) {
            if(i != row && board[i][col] == board[row][col]){
                return false;
            }
            if(i != col && board[row][i] == board[row][col]){
                return false;
            }
        }

        for(int i = row/3 * 3; i < row/3 * 3 +3 ; ++i){
            for(int j = col/3 *3; j < col/3 * 3 + 3; ++j){
                if((i != row || j != col) && board[row][col] == board[i][j]){
                    return false;
                }
            }
        }
        return true;
    }

public:
    void solveSudoku(vector<vector<char>>& board) {
        solveSudoku(board, 0, 0);
        return;
    }
};

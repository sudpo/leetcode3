/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
    struct compare{
        bool operator() (const ListNode *l1, const ListNode *l2){
            return (l1->val > l2->val);
        }
    };
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
      priority_queue<ListNode *, vector<ListNode *>, compare> pq;
      for(int i = 0; i < lists.size(); ++i){
          ListNode *tmp = lists[i];
          if(tmp != NULL){
              pq.push(tmp);
          }
      }

      if(pq.size() == 0){
          return NULL;
      }

      ListNode *dummy = new ListNode(0);
      ListNode *pre = dummy;
      while(!pq.empty()){
        ListNode *res = pq.top();
        pq.pop();
        pre->next = res;
        pre = res;
        if(res->next != NULL){
            pq.push(res->next);
        }
      }
      return dummy->next;
    }
};

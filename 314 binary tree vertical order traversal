/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> verticalOrder(TreeNode* root) {
        vector<vector<int> > res;
        if(root == NULL){
            return res;
        }
        map<int, vector<int>> m_map;
        queue<pair<TreeNode *, int> > qu;
        qu.push(make_pair(root, 0));
        while(!qu.empty()){
            int n = qu.size();
            for(int i = 0; i < n; ++i){
                TreeNode *curr = qu.front().first;
                int key = qu.front().second;
                m_map[key].push_back(curr->val);
                qu.pop();
                if(curr->left != NULL){
                    qu.push(make_pair(curr->left, key-1));
                }
                if(curr->right != NULL){
                    qu.push(make_pair(curr->right, key+1));
                }
            }
        }
        for(auto it = m_map.begin(); it != m_map.end(); ++it){
            res.push_back(it->second);
        }
        return res;
    }
};

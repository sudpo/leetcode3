/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        if(headA == NULL || headB == NULL){
            return NULL;
        }

        int lenA = 0;
        int lenB = 0;
        ListNode *curr = headA;
        while(curr != NULL){
            curr = curr->next;
            lenA++;
        }
        curr = headB;
        while(curr != NULL){
            curr = curr->next;
            lenB++;
        }

        int diff = abs(lenA - lenB);
        if(lenA > lenB){
            while(diff > 0){
                headA = headA->next;
                diff--;
            }
        }else{
            while(diff > 0){
                headB = headB->next;
                diff--;
            }
        }

        while(headA != NULL && headB != NULL){
            if(headA == headB){
                return headA;
            }
            headA = headA->next;
            headB = headB->next;
        }
        return NULL;
    }
};

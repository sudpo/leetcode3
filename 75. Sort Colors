class Solution {
public:
    void sortColors(vector<int>& nums) {
        int start = 0;
        int end = nums.size() - 1;
        int i = 0;
        while(i <= end){
            if(nums[i] == 0){
                swap(nums[i], nums[start]);
                start++;
                i++;
            }else if(nums[i] == 2){
                swap(nums[i], nums[end]);
                end--;
            }else{
                i++;
            }
        }
        return;
    }
};

class Solution {
public:
    void sortColors(vector<int>& nums) {
        int n = nums.size();
        if( n < 2){
            return;
        }
        int n0 = 0;
        int n1 = 0;
        int n2 = 0;
        for(int i =0; i< n; ++i){
            if(nums[i] == 0){
                nums[n2++] = 2;
                nums[n1++] = 1;
                nums[n0++] = 0;
            }else if(nums[i] == 1){
                nums[n2++] = 2;
                nums[n1++] = 1;
            }else{
                nums[n2++] = 2;
            }
        }
        return;
    }
};
